name: project deployment
on:
  push:
    branches: [main]
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
         distribution: temurin
         java-version: '17'
      - name: Build jar with Gradle (uses build cache)
        uses: gradle/actions/setup-gradle@v4
      - name: Gradle build
        run: |
         chmod +x ./gradlew
         ./gradlew clean bootJar
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/spring_basic:${{ github.run_number }}

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: run ssh
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.MASTER_IP }}
          username: test
          password: ${{ secrets.MASTER_PW }}
          port: ${{ secrets.MASTER_PORT }}
          script: |
            if kubectl get svc nginx-svc1 -n ysm -o wide | grep -q "green"; then
              CURRENT_VER="green"
              NEXT_VER="blue"
            else
              CURRENT_VER="blue"
              NEXT_VER="green"
            fi
            
            cat <<EOF | kubectl apply -f -
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: spring-deployment-${NEXT_VER}
              namespace: ysm
            spec:
              selector:
                matchLabels:
                  type: test
                  ver: ${NEXT_VER}
              replicas: 1
              strategy:
                type: RollingUpdate
              template:
                metadata:
                  labels:
                    type: test
                    ver: ${NEXT_VER}
                spec:
                  containers:
                    - name: container
                      image: cowmin/spring_basic:${{ github.run_number }}
                      livenessProbe:
                        httpGet:
                          path: /health
                          port: 8080
                        initialDelaySeconds: 20
                        periodSeconds: 10
                      readinessProbe:
                        httpGet:
                          path: /test
                          port: 8080
                        initialDelaySeconds: 20
                        periodSeconds: 10
                        successThreshold: 3
                  terminationGracePeriodSeconds: 0
            EOF

            kubectl rollout status deployment/spring-deployment-${NEXT_VER} -n ysm
            cat <<EOF | kubectl apply -f -
            apiVersion: v1
            kind: Service
            metadata:
              name: nginx-svc1
              namespace: ysm
            spec:
              selector:
                type: test
                ver: ${NEXT_VER}
              ports:
                - port: 8080
                  targetPort: 8080
              type: LoadBalancer
            EOF
            
            kubectl scale deployment spring-deployment-${CURRENT_VER} -n ysm --replicas=0
